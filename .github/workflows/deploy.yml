# name: CI

# on:
#   push:
#     branches:
#       - main

# jobs:
#   buuild-and-deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v2

#       - name: Setup Node.js
#        uses: actions/setup-node@v2
#        with:
#         node-version: '20'
# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["develop"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v2
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Run ESLint
        run: npm run lint

      - name: Run Jest
        run: npm test

  delivery:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ success() }}
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.ACCESS_TOKEN }}

      - name: Set up Git
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Merge to main
        run: |
          git fetch
          git checkout main
          git merge develop --allow-unrelated-histories --no-edit
          git push origin main

      # - name: Install Dependencies
      #  run: yarn install

      # - name: Build
      #   run: yarn build

      # - name: Upload to FTP
      #   uses: SamKirkland/FTP-Deploy-Action@4.0.0
      #   with:
      #     server: ${{ secrets.FTP_SERVER }}
      #     username: ${{ server.FTP_USERNAME }}
      #     password: ${{ server.FTP_PASSWORD }}
      #     local-dir: ./dist/
      #     server-dir:
